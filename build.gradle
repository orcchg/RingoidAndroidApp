apply from: 'buildsystem/dependencies.gradle'

enum Environment {
    DEVELOP('com.ringoid.app.develop', 'Ringoid Test', '"https://test.ringoidapp.com"', "-test"),
    PRODUCTION('com.ringoid.app', 'Ringoid', '"https://prod.ringoidapp.com"', ""),
    STAGING('com.ringoid.app.staging', 'Ringoid Staging', '"https://stage.ringoidapp.com"', "-staging")

    String appId, appName, apiUrl, versionNameSuffix

    Environment(String appId, String appName, String apiUrl, String versionNameSuffix) {
        this.appId = appId
        this.appName = appName
        this.apiUrl = apiUrl
        this.versionNameSuffix = versionNameSuffix
    }
}

static String getAppId(Environment env) { return env.appId }
static String getAppName(Environment env) { return env.appName }
static String getApiUrl(Environment env) { return env.apiUrl }

static String getVersionName(Environment env, int major, int middle, int minor, int build) {
    String version = "$major.$middle.$minor.$build"
    return "$version${env.versionNameSuffix}"
}

ext {
    env = Environment.STAGING
    appName = getAppName(env)
    apiUrl = getApiUrl(env)
    isStaging = env == Environment.STAGING
    host = '"ringoid.com"'
    authority = '"https://ringoid.com"'
    appnav = '"appnav://ringoid.com"'
    sentryDSN = '"https://e71e66c6bcfd4cbb8541f9a5536b0d9f@sentry.io/1387000"'

    debounceClickMs = "500L"
    debounceInputMs = "200L"
    postDelayMs = "1000L"
    requestTimeThreshold = "2000L"
    responseTimeThreshold = "1000L"
    retryCount = "5"
    retryDelayMs = "55L"
}

buildscript {
    apply from: 'buildsystem/version.gradle'

    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${buildGradleVersion}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:${kotlinVersion}"
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
    }

    ext {
        majorVersion = 1
        middleVersion = 0
        minorVersion = 0
        buildVersion = 112

        androidApplicationId = getAppId(env)
        androidVersionCode = buildVersion
        androidVersionName = getVersionName(env, majorVersion, middleVersion, minorVersion, buildVersion)
        testInstrumentationRunner = "android.support.test.runner.AndroidJUnitRunner"
        testApplicationId = 'com.ringoid.app.test'

        // app configuration
        backToGalleryFromImagePreview = false
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
