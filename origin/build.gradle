rootProject.originPlugins.each {
    apply plugin: it
}

android {
    baseFeature true

    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.androidVersionCode
        versionName rootProject.ext.androidVersionName
        testInstrumentationRunner rootProject.ext.testInstrumentationRunner
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            java.srcDirs += 'src/main/kotlin'
            res.srcDirs = ['src/main/res', 'src/main/res-screen',
                           'src/main/res-screen/feed',
                           'src/main/res-screen/image',
                           'src/main/res-screen/main',
                           'src/main/res-screen/messenger',
                           'src/main/res-screen/settings',
                           'src/main/res-screen/user',
                           'src/main/res-screen/web']
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    def originDependencies = rootProject.ext.originDependencies
    def androidTestOriginDeps = rootProject.ext.androidTestOriginDeps
    def testOriginDependencies = rootProject.ext.testOriginDependencies

    originDependencies.each {
        add(it.configuration, it.dependency, it.options)
    }
    testOriginDependencies.each {
        add(it.configuration, it.dependency, it.options)
    }
    androidTestOriginDeps.each {
        add(it.configuration, it.dependency, it.options)
    }

    application project(':app')
}
